{"ast":null,"code":"import { sendPost } from \"../../connections/backendConnect\";\nexport const handleLogin = async (email, password, navigate) => {\n  const payload = {\n    email,\n    password\n  };\n  try {\n    const res = await sendPost(\"/user/login\", payload);\n    console.log(\"res login\", res);\n    if (res.success === true) {\n      localStorage.setItem(\"accessToken\", res.accessToken);\n      localStorage.setItem(\"refreshToken\", res.refreshToken);\n      if (res.user) {\n        localStorage.setItem(\"user\", JSON.stringify(res.user));\n      }\n      navigate(\"/home\");\n      return {\n        success: true\n      };\n    }\n    if (res.error) {\n      return {\n        success: false,\n        message: res.error\n      };\n    }\n    return {\n      success: false,\n      field: res.field,\n      message: res.message || \"Error desconocido\"\n    };\n  } catch (error) {\n    console.error(\"[LoginBackend]: Error inesperado:\", error);\n    return {\n      success: false,\n      message: \"Error de conexión al servidor\"\n    };\n  }\n};","map":{"version":3,"names":["sendPost","handleLogin","email","password","navigate","payload","res","console","log","success","localStorage","setItem","accessToken","refreshToken","user","JSON","stringify","error","message","field"],"sources":["C:/Users/tig1/Desktop/Nueva carpeta (3)/projectManagement/frontend/src/views/loginView/loginBackend.js"],"sourcesContent":["import { sendPost } from \"../../connections/backendConnect\";\r\n\r\nexport const handleLogin = async (email, password, navigate) => {\r\n  const payload = { email, password };\r\n\r\n  try {\r\n    const res = await sendPost(\"/user/login\", payload);\r\n    console.log(\"res login\", res);\r\n\r\n    if (res.success === true) {\r\n      localStorage.setItem(\"accessToken\", res.accessToken);\r\n      localStorage.setItem(\"refreshToken\", res.refreshToken);\r\n      if (res.user) {\r\n        localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n      }\r\n\r\n      navigate(\"/home\");\r\n      return { success: true };\r\n    }\r\n\r\n    if (res.error) {\r\n      return {\r\n        success: false,\r\n        message: res.error,\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: false,\r\n      field: res.field,\r\n      message: res.message || \"Error desconocido\",\r\n    };\r\n  } catch (error) {\r\n    console.error(\"[LoginBackend]: Error inesperado:\", error);\r\n    return {\r\n      success: false,\r\n      message: \"Error de conexión al servidor\",\r\n    };\r\n  }\r\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kCAAkC;AAE3D,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC9D,MAAMC,OAAO,GAAG;IAAEH,KAAK;IAAEC;EAAS,CAAC;EAEnC,IAAI;IACF,MAAMG,GAAG,GAAG,MAAMN,QAAQ,CAAC,aAAa,EAAEK,OAAO,CAAC;IAClDE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,GAAG,CAAC;IAE7B,IAAIA,GAAG,CAACG,OAAO,KAAK,IAAI,EAAE;MACxBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,GAAG,CAACM,WAAW,CAAC;MACpDF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,GAAG,CAACO,YAAY,CAAC;MACtD,IAAIP,GAAG,CAACQ,IAAI,EAAE;QACZJ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEI,IAAI,CAACC,SAAS,CAACV,GAAG,CAACQ,IAAI,CAAC,CAAC;MACxD;MAEAV,QAAQ,CAAC,OAAO,CAAC;MACjB,OAAO;QAAEK,OAAO,EAAE;MAAK,CAAC;IAC1B;IAEA,IAAIH,GAAG,CAACW,KAAK,EAAE;MACb,OAAO;QACLR,OAAO,EAAE,KAAK;QACdS,OAAO,EAAEZ,GAAG,CAACW;MACf,CAAC;IACH;IAEA,OAAO;MACLR,OAAO,EAAE,KAAK;MACdU,KAAK,EAAEb,GAAG,CAACa,KAAK;MAChBD,OAAO,EAAEZ,GAAG,CAACY,OAAO,IAAI;IAC1B,CAAC;EACH,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MACLR,OAAO,EAAE,KAAK;MACdS,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}